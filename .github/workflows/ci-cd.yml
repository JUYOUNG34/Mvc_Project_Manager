name: CI/CD Pipeline
#Test1.
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - uses: actions/checkout@v3

      # 도커 이미지 빌드 및 푸시 (Maven 빌드 생략)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-mvc-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 서버에 SSH로 접속하여 배포 (비밀번호 인증 사용)
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}  # 키 대신 비밀번호 사용
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/spring-mvc-app:latest
            docker stop spring-app || true
            docker rm spring-app || true
            docker run -d -p 80:8080 --name spring-app --restart always ${{ secrets.DOCKER_HUB_USERNAME }}/spring-mvc-app:latest